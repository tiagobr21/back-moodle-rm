 SELECT DISTINCT TOP(20) X.RA as USERNAME
,x.CPFSENHA as PASSWORD
,x.FIRSTNAME
,x.LASTNAME
,x.EMAIL
,X.NIVEL_ENSINO AS profile_field_NIVEL_ENSINO
,X.MODALIDADE AS profile_field_MODALIDADE
,X.CPF AS profile_field_CPF
,X.filial AS profile_field_FILIAL

FROM (

SELECT DISTINCT  STURMADISC.CODCOLIGADA, GCOLIGADA.NOME AS COLIGADA, STURMADISC.CODFILIAL, GFILIAL.NOME AS FILIAL, 
STIPOCURSO.CODTIPOCURSO,
CASE
when STIPOCURSO.NOME = 	'EAD - Manaquiri -AM'	then 	'EAD_Manaquiri'
when STIPOCURSO.NOME = 	'EAD - Rio Preto da Eva - AM'	then 	'EAD_Manaquiri'
when STIPOCURSO.NOME = 	'EAD - Presidente Figueiredo - AM'	then 	'EAD_Presidente_Figueiredo_AM'
when STIPOCURSO.NOME = 	'EAD - Barreirinha - AM'	then 	'EAD_Barreirinha'
when STIPOCURSO.NOME = 	'EAD - Terra Santa - PA'	then 	'EAD_Terra_Santa'
when STIPOCURSO.NOME = 	'EAD - Beruri - AM'	then 	'EAD_Beruri'
when STIPOCURSO.NOME = 	'EAD - Boa Vista - RR'	then 	'EAD_Boa_Vista'
when STIPOCURSO.NOME = 	'EAD - Boa Vista do Ramos - AM'	then 	'EAD_Boa_Vista_do_Ramos'
when STIPOCURSO.NOME = 	'EAD - Cachoeirinha'	then 	'EAD_Cachoeirinha'
when STIPOCURSO.NOME = 	'EAD - Coari - AM'	then 	'EAD_Coari'
when STIPOCURSO.NOME = 	'EAD - Itacoatiara - AM'	then 	'EAD_Itacoatiara'
when STIPOCURSO.NOME = 	'EAD - Manacapuru - AM'	then 	'EAD_Manacapuru'
when STIPOCURSO.NOME = 	'EAD - Parintins - AM'	then 	'EAD_Parintins'
when STIPOCURSO.NOME = 	'EAD - Manaus Sede - AM'	then 	'EAD_Sede'
when STIPOCURSO.NOME = 	'EAD - Tabatinga - AM'	then 	'EAD_Tabatinga'
when STIPOCURSO.NOME = 	'EAD - Tefé - AM'	then 	'EAD_Tefé'
when STIPOCURSO.NOME = 	'EAD - Zona leste'	then 	'EAD_Zona_leste'
when STIPOCURSO.NOME = 	'EAD - Zona Norte'	then 	'EAD_Zona_Norte'
when STIPOCURSO.NOME = 	'EAD- Palmas'	then 	'EAD_Palmas'
when STIPOCURSO.NOME = 	'EAD - Santarém - PA'	then 	'EAD_Santarém'
when STIPOCURSO.NOME = 	'EAD - Iranduba - AM'	then 	'EAD_Iranduba'
when STIPOCURSO.NOME = 	'EAD - Maués - AM'	then 	'EAD_Maués'
when STIPOCURSO.NOME = 	'EAD - Urucará - AM'	then 	'EAD_Urucará'
when STIPOCURSO.NOME = 	'EAD - Novo Airão - AM'	then 	'EAD_Novo_Airão'
when STIPOCURSO.NOME = 	'EAD - Autazes - AM'	then 	'EAD_Autazes'
when STIPOCURSO.NOME = 	'EAD - Humaitá - AM'	then 	'EAD_Humaitá'
when STIPOCURSO.NOME = 	'EAD - Careiro - AM'	then 	'EAD_Careiro'
when STIPOCURSO.NOME = 	'EAD - Jutaí - AM'	then 	'EAD_Jutaí'
when STIPOCURSO.NOME = 	'EAD - Oriximiná - AM'	then 	'EAD_Oriximiná'
when STIPOCURSO.NOME = 	'EAD - Manicoré - AM'	then 	'EAD_Manicoré'
when STIPOCURSO.NOME = 	'EAD - Caapiranga - AM'	then 	'EAD_Caapiranga'
when STIPOCURSO.NOME = 	'EAD - Codajás - AM'	then 	'EAD_Codajás'
when STIPOCURSO.NOME = 	'EAD - Tapauá - AM'	then 	'EAD_Tapauá'
when STIPOCURSO.NOME = 	'EAD - Boca do Acre - AM'	then 	'EAD_Boca_do_Acre'
when STIPOCURSO.NOME = 	'EAD - Nova Olinda do Norte - AM'	then 	'EAD_Nova_Olinda_do_Norte'
when STIPOCURSO.NOME = 	'EAD - Óbidos - PA'	then 	'EAD_Óbidos'
when STIPOCURSO.NOME = 	'EAD -  Manaus Sede - AM'	then 	'EAD_Manaus_Sede'
when STIPOCURSO.NOME = 	'EAD -  Manacapuru - AM'	then 	'EAD_Manacapuru'
when STIPOCURSO.NOME = 	'Graduação - Parintins'	then 	'Graduação_Parintins'
when STIPOCURSO.NOME = 	'Graduação - Tefé'	then 	'Graduação_Tefé'
when STIPOCURSO.NOME = 	'Graduação - Coari'	then 	'Graduação_Coari'
when STIPOCURSO.NOME = 	'Graduação - Sede'	then 	'Graduação_Sede'
when STIPOCURSO.NOME = 	'Graduação - Cachoeirinha'	then 	'Graduação_Cachoeirinha'
when STIPOCURSO.NOME = 	'Graduação - Itacoatiara'	then 	'Graduação_Itacoatiara'
when STIPOCURSO.NOME = 	'Graduação - Zona Leste'	then 	'Graduação_Zona_Leste'
when STIPOCURSO.NOME = 	'Graduação - Zona Norte'	then 	'Graduação_Zona_Norte'
when STIPOCURSO.NOME = 	'Graduação - Manacapuru'	then 	'Graduação_Manacapuru'
end as NIVEL_ENSINO, 

CASE 
	WHEN STIPOCURSO.NOME LIKE 'GRADUA%' THEN 'PRESENCIAL'
	WHEN STIPOCURSO.NOME LIKE 'EAD%' AND SHABILITACAO.NOME LIKE '%SEMIPRESENCIAL%' THEN 'SEMIPRESENCIAL'
	WHEN STIPOCURSO.NOME LIKE 'EAD%' AND SHABILITACAO.NOME NOT LIKE '%SEMIPRESENCIAL%' THEN 'EAD' END AS MODALIDADE,

	SCURSO.CODCURSO, SCURSO.NOME CURSO, SHABILITACAO.NOME AS HABILITACAO, 
CASE 
	WHEN TURMAGERENCIAL.CODTURMA IS NULL THEN STURMADISC.CODTURMA
	ELSE TURMAGERENCIAL.CODTURMA END AS CODTURMA, 
SALUNO.RA, PPESSOA.NOME ALUNO, PPESSOA.CPF,

CONVERT(VARCHAR(6), PPESSOA.CPF) AS CPFSENHA,

CONCAT(CONVERT(VARCHAR, STURMADISC.CODCOLIGADA),'-',CONVERT(VARCHAR, STURMADISC.IDTURMADISC)) AS COURSE1,
UPPER( CASE WHEN CHARINDEX(' ',LTRIM(RTRIM(PPESSOA.NOME))) >0 THEN LEFT(PPESSOA.NOME,CHARINDEX(' ',LTRIM(RTRIM(PPESSOA.NOME)))-1) ELSE PPESSOA.NOME END) AS FIRSTNAME, 
SUBSTRING(LTRIM(RTRIM(PPESSOA.NOME)), CHARINDEX(' ',LTRIM(RTRIM(PPESSOA.NOME)))+1, 50) LASTNAME,
LOWER( CASE 
			WHEN PPESSOA.EMAIL IS NULL THEN CONCAT(SALUNO.RA,'@default.com.br') 
			WHEN PPESSOA.EMAIL = '' THEN CONCAT(SALUNO.RA,'@default.com.br') 
			WHEN PPESSOA.EMAIL = '-' THEN CONCAT(SALUNO.RA,'@default.com.br') 
			WHEN PPESSOA.EMAIL = '---' THEN CONCAT(SALUNO.RA,'@default.com.br') 
			ELSE TRIM(PPESSOA.EMAIL) END) AS EMAIL,

STURMADISC.CODDISC, SDISCIPLINA.NOME, sstatus.DESCRICAO as status

FROM STURMADISC (NOLOCK)
	INNER JOIN STURMADISCCOMPL (NOLOCK) ON STURMADISCCOMPL.CODCOLIGADA = STURMADISC.CODCOLIGADA AND STURMADISCCOMPL.IDTURMADISC = STURMADISC.IDTURMADISC
	INNER JOIN SPLETIVO (NOLOCK) ON STURMADISC.CODCOLIGADA=SPLETIVO.CODCOLIGADA AND SPLETIVO.IDPERLET=STURMADISC.IDPERLET
	INNER JOIN SDISCIPLINA (NOLOCK) ON STURMADISC.CODCOLIGADA=SDISCIPLINA.CODCOLIGADA AND STURMADISC.CODDISC=SDISCIPLINA.CODDISC
	INNER JOIN SMATRICULA (NOLOCK) ON STURMADISC.CODCOLIGADA=SMATRICULA.CODCOLIGADA AND STURMADISC.IDTURMADISC=SMATRICULA.IDTURMADISC
	INNER JOIN SSTATUS (NOLOCK) ON SSTATUS.CODCOLIGADA=SMATRICULA.CODCOLIGADA AND SSTATUS.CODSTATUS=SMATRICULA.CODSTATUS
	INNER JOIN SMATRICPL (NOLOCK) ON SMATRICPL.CODCOLIGADA=SMATRICULA.CODCOLIGADA AND SMATRICPL.RA=SMATRICULA.RA AND SMATRICPL.IDPERLET=SMATRICULA.IDPERLET 
				AND SMATRICPL.IDHABILITACAOFILIAL=SMATRICULA.IDHABILITACAOFILIAL
	LEFT JOIN  SSTATUS STATUS_PERIODO (NOLOCK) ON STATUS_PERIODO.CODCOLIGADA=SMATRICPL.CODCOLIGADA AND STATUS_PERIODO.CODSTATUS=SMATRICPL.CODSTATUS
	INNER JOIN SALUNO (NOLOCK) ON SALUNO.CODCOLIGADA=SMATRICPL.CODCOLIGADA AND SALUNO.RA=SMATRICPL.RA
	INNER JOIN PPESSOA (NOLOCK) ON PPESSOA.CODIGO=SALUNO.CODPESSOA
	INNER JOIN SHABILITACAOFILIAL (NOLOCK) ON SHABILITACAOFILIAL.CODCOLIGADA=SMATRICPL.CODCOLIGADA AND SHABILITACAOFILIAL.IDHABILITACAOFILIAL=SMATRICPL.IDHABILITACAOFILIAL
	LEFT OUTER JOIN SHABILITACAO  ON SHABILITACAO.CODCOLIGADA = SHABILITACAOFILIAL.CODCOLIGADA AND SHABILITACAO.CODCURSO = SHABILITACAOFILIAL.CODCURSO 
		AND SHABILITACAO.CODHABILITACAO = SHABILITACAOFILIAL.CODHABILITACAO
	INNER JOIN SCURSO (NOLOCK) ON SCURSO.CODCOLIGADA=SHABILITACAOFILIAL.CODCOLIGADA AND SCURSO.CODCURSO=SHABILITACAOFILIAL.CODCURSO
	INNER JOIN STIPOCURSO (NOLOCK) ON STIPOCURSO.CODCOLIGADA=SHABILITACAOFILIAL.CODCOLIGADA AND STIPOCURSO.CODTIPOCURSO=SHABILITACAOFILIAL.CODTIPOCURSO
	LEFT JOIN STIPOALUNO (NOLOCK) ON STIPOALUNO.CODCOLIGADA = SALUNO.CODCOLIGADA AND STIPOALUNO.CODTIPOALUNO = SALUNO.CODTIPOALUNO
									AND STIPOALUNO.CODTIPOCURSO = STIPOCURSO.CODTIPOCURSO
	INNER JOIN GCOLIGADA (NOLOCK) ON GCOLIGADA.CODCOLIGADA = STURMADISC.CODCOLIGADA
	INNER JOIN GFILIAL (NOLOCK) ON GFILIAL.CODCOLIGADA = STURMADISC.CODCOLIGADA AND GFILIAL.CODFILIAL = STURMADISC.CODFILIAL
	
	LEFT JOIN STURMADISCGERENCIADA (NOLOCK) ON STURMADISCGERENCIADA.CODCOLIGADA = STURMADISC.CODCOLIGADA AND STURMADISCGERENCIADA.IDTURMADISCGERENCIADA = STURMADISC.IDTURMADISC
	LEFT JOIN STURMADISC TURMAGERENCIAL (NOLOCK) ON TURMAGERENCIAL.CODCOLIGADA = STURMADISCGERENCIADA.CODCOLIGADA AND TURMAGERENCIAL.IDTURMADISC = STURMADISCGERENCIADA.IDTURMADISC 
	

												
WHERE ( ( STIPOCURSO.NOME LIKE 'GRAD%' AND STURMADISC.TIPO = 'D' ) OR 
		      (STIPOCURSO.NOME LIKE 'EAD%' ))
	  AND NOT  (SMATRICULA.CODCOLIGADA = 3 AND SHABILITACAOFILIAL.CODTIPOCURSO IN (12)) /*ALUNOS DA FAMEC*/
AND SPLETIVO.CODPERLET IN ('2022/2','2022/2F')
 AND (UPPER(SSTATUS.DESCRICAO) LIKE 'MATRIC%')
				/*OR UPPER(SSTATUS.DESCRICAO) LIKE 'APROVA%'  
				OR UPPER(SSTATUS.DESCRICAO) LIKE 'REPROV%'
				OR UPPER(SSTATUS.DESCRICAO) LIKE 'EXAME%'
				OR UPPER(SSTATUS.DESCRICAO) LIKE 'Pré-Matriculado%'	
				OR UPPER(SSTATUS.DESCRICAO) LIKE '%AGUARDANDO%' )*/
                
																						
		 ) x  
	